---
description: Guidelines for working with typescript
globs: **/*.ts, **/*.tsx, **/*.d.ts
---

# Typescript

## Type System
- Use strict TypeScript configuration
- Prefer interfaces over types for object definitions
- Use type for unions, intersections, and mapped types
- Avoid using `any`, prefer `unknown` for unknown types
- Leverage TypeScript's built-in utility types
- Use generics for reusable type patterns
- Do not use explicit return types when they are not needed

## Common Types
- Use or create common utility types to help disambiguate. For example: ID, URL, StreetAddress, Image, etc.

## Naming Conventions
- Use PascalCase for type names and interfaces
- Use camelCase for variables and functions
- Use UPPER_CASE for constants
- Use descriptive names with auxiliary verbs (e.g., isLoading, hasError)

## Code Organization
- Keep type definitions close to where they're used
- Export types and interfaces from dedicated type files when shared

## Best Practices
- Enable strict mode in tsconfig.json
- Use readonly for immutable properties
- Leverage discriminated unions for type safety
- Use type guards for runtime type checking
- Implement proper null checking
- Avoid type assertions unless necessary
